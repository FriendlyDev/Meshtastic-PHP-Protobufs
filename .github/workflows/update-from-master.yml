on:
  schedule:
    - cron:  "0 */3 * * *"
  workflow_dispatch:

name: Create PHP protobufs from latest Meshtastic Protobufs

jobs:
  update-from-master:
    name: Update from master
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Clone Meshtastic Protobufs repository
        uses: actions/checkout@v4
        with:
          repository: meshtastic/protobufs
          token: ${{ github.token }}
          path: ./protobufs
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout Meshtastic Protobufs latest release tag
        run: |
          cd ./protobufs
          git reset --hard HEAD
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          git checkout $LATEST_TAG
          cd ..
          echo "LATEST_TAG=${LATEST_TAG}" >> "$GITHUB_ENV"
          echo "LATEST_TAG_NUMBER=${LATEST_TAG:1}" >> "$GITHUB_ENV"
        shell: bash

      - name: Checkout current code
        uses: actions/checkout@v4
        with:
          ref: master
          token: ${{ github.token }}
          path: ./php-code
          fetch-depth: 0
          fetch-tags: true

      - name: Get latest tag of this repository
        run: |
          cd ./php-code
          git checkout master
          git reset --hard HEAD
          CURRENT_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          cd ..
          echo "CURRENT_TAG=${CURRENT_TAG}" >> "$GITHUB_ENV"
          echo "CURRENT_TAG_NUMBER=${CURRENT_TAG:1}" >> "$GITHUB_ENV"
        shell: bash

      - name: Show working directory
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        run: ls -lash ./*
        shell: bash

      - name: Install Protoc
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        uses: arduino/setup-protoc@v3

      - name: Check protoc is installed
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        run: which protoc
        shell: bash

      - name: Create output directory
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        run: mkdir -p ./protobufs-output
        shell: bash

      - name: Show working directory
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        run: ls -lash ./*
        shell: bash

      - name: Convert the nanopb.proto file to proto3
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        run: |
          cd ./protobufs
          sed -i 's/proto2/proto3/g' ./nanopb.proto
          sed -i 's/ \[default = [^;]*//g' ./nanopb.proto
          sed -i 's/optional google.protobuf.FieldDescriptorProto/\/\/ optional google.protobuf.FieldDescriptorProto/g' ./nanopb.proto
          cd ..
        shell: bash

      - name: Generate the PHP files from the protobufs
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        run: |
          cd ./protobufs
          find . -type f -iname '*.proto' -exec protoc --proto_path= --php_out=../protobufs-output {} \;
          cd ..
        shell: bash

      - name: Replace the current protobuf PHP files with the ones we just generated
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        run: |
          rm -rf ./php-code/src/GPBMetadata
          rm -rf ./php-code/src/Meshtastic
          mv ./protobufs-output/GPBMetadata ./php-code/src/
          mv ./protobufs-output/Meshtastic ./php-code/src/
        shell: bash

      - name: Commit and push changes
        if: env.LATEST_TAG_NUMBER > env.CURRENT_TAG_NUMBER
        run: |
          cd ./php-code
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "Update protobufs to latest version"
          git push origin master
          git tag -a $LATEST_TAG -m "Update protobufs to latest version"
          git push --tags origin master
        shell: bash

      - name: get the latest release tag
        run: |
          cd ./php-code
          echo "Current TAG = ${{ env.LATEST_TAG }}"
          echo "$(gh release view ${{ env.LATEST_TAG }} 2>&1)"
          set +e
          if [[ "$(gh release view ${{ env.LATEST_TAG }} 2>&1)" == "release not found" ]]; then
            echo "Release not found."
            echo "DO_RELEASE=1" >> $GITHUB_OUTPUT
          else
            echo "Release found."
            echo "DO_RELEASE=0" >> $GITHUB_OUTPUT
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        if: env.DO_RELEASE > 0
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.LATEST_TAG }}
          release_name: Release ${{ env.LATEST_TAG }}
          body: |
            You can read the full changelog [here](https://github.com/meshtastic/protobufs/releases).

            Changelog for this version tag is [here](https://github.com/meshtastic/protobufs/releases/tag/${{ env.LATEST_TAG }})
          draft: false
          prerelease: false
