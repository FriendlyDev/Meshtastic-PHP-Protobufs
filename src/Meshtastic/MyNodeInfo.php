<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/mesh.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Unique local debugging info for this node
 * Note: we don't include position or the user info, because that will come in the
 * Sent to the phone in response to WantNodes.
 *
 * Generated from protobuf message <code>meshtastic.MyNodeInfo</code>
 */
class MyNodeInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Tells the phone what our node number is, default starting value is
     * lowbyte of macaddr, but it will be fixed if that is already in use
     *
     * Generated from protobuf field <code>uint32 my_node_num = 1;</code>
     */
    protected $my_node_num = 0;
    /**
     * The total number of reboots this node has ever encountered
     * (well - since the last time we discarded preferences)
     *
     * Generated from protobuf field <code>uint32 reboot_count = 8;</code>
     */
    protected $reboot_count = 0;
    /**
     * The minimum app version that can talk to this device.
     * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
     *
     * Generated from protobuf field <code>uint32 min_app_version = 11;</code>
     */
    protected $min_app_version = 0;
    /**
     * Unique hardware identifier for this device
     *
     * Generated from protobuf field <code>bytes device_id = 12;</code>
     */
    protected $device_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $my_node_num
     *           Tells the phone what our node number is, default starting value is
     *           lowbyte of macaddr, but it will be fixed if that is already in use
     *     @type int $reboot_count
     *           The total number of reboots this node has ever encountered
     *           (well - since the last time we discarded preferences)
     *     @type int $min_app_version
     *           The minimum app version that can talk to this device.
     *           Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
     *     @type string $device_id
     *           Unique hardware identifier for this device
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Mesh::initOnce();
        parent::__construct($data);
    }

    /**
     * Tells the phone what our node number is, default starting value is
     * lowbyte of macaddr, but it will be fixed if that is already in use
     *
     * Generated from protobuf field <code>uint32 my_node_num = 1;</code>
     * @return int
     */
    public function getMyNodeNum()
    {
        return $this->my_node_num;
    }

    /**
     * Tells the phone what our node number is, default starting value is
     * lowbyte of macaddr, but it will be fixed if that is already in use
     *
     * Generated from protobuf field <code>uint32 my_node_num = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMyNodeNum($var)
    {
        GPBUtil::checkUint32($var);
        $this->my_node_num = $var;

        return $this;
    }

    /**
     * The total number of reboots this node has ever encountered
     * (well - since the last time we discarded preferences)
     *
     * Generated from protobuf field <code>uint32 reboot_count = 8;</code>
     * @return int
     */
    public function getRebootCount()
    {
        return $this->reboot_count;
    }

    /**
     * The total number of reboots this node has ever encountered
     * (well - since the last time we discarded preferences)
     *
     * Generated from protobuf field <code>uint32 reboot_count = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setRebootCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->reboot_count = $var;

        return $this;
    }

    /**
     * The minimum app version that can talk to this device.
     * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
     *
     * Generated from protobuf field <code>uint32 min_app_version = 11;</code>
     * @return int
     */
    public function getMinAppVersion()
    {
        return $this->min_app_version;
    }

    /**
     * The minimum app version that can talk to this device.
     * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
     *
     * Generated from protobuf field <code>uint32 min_app_version = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setMinAppVersion($var)
    {
        GPBUtil::checkUint32($var);
        $this->min_app_version = $var;

        return $this;
    }

    /**
     * Unique hardware identifier for this device
     *
     * Generated from protobuf field <code>bytes device_id = 12;</code>
     * @return string
     */
    public function getDeviceId()
    {
        return $this->device_id;
    }

    /**
     * Unique hardware identifier for this device
     *
     * Generated from protobuf field <code>bytes device_id = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setDeviceId($var)
    {
        GPBUtil::checkString($var, False);
        $this->device_id = $var;

        return $this;
    }

}

