<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/admin.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response envelope for node_remote_hardware_pins
 *
 * Generated from protobuf message <code>meshtastic.NodeRemoteHardwarePinsResponse</code>
 */
class NodeRemoteHardwarePinsResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Nodes and their respective remote hardware GPIO pins
     *
     * Generated from protobuf field <code>repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 1;</code>
     */
    private $node_remote_hardware_pins;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Meshtastic\NodeRemoteHardwarePin>|\Google\Protobuf\Internal\RepeatedField $node_remote_hardware_pins
     *           Nodes and their respective remote hardware GPIO pins
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Admin::initOnce();
        parent::__construct($data);
    }

    /**
     * Nodes and their respective remote hardware GPIO pins
     *
     * Generated from protobuf field <code>repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNodeRemoteHardwarePins()
    {
        return $this->node_remote_hardware_pins;
    }

    /**
     * Nodes and their respective remote hardware GPIO pins
     *
     * Generated from protobuf field <code>repeated .meshtastic.NodeRemoteHardwarePin node_remote_hardware_pins = 1;</code>
     * @param array<\Meshtastic\NodeRemoteHardwarePin>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNodeRemoteHardwarePins($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Meshtastic\NodeRemoteHardwarePin::class);
        $this->node_remote_hardware_pins = $arr;

        return $this;
    }

}

