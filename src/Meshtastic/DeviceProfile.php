<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/clientonly.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * This abstraction is used to contain any configuration for provisioning a node on any client.
 * It is useful for importing and exporting configurations.
 *
 * Generated from protobuf message <code>meshtastic.DeviceProfile</code>
 */
class DeviceProfile extends \Google\Protobuf\Internal\Message
{
    /**
     * Long name for the node
     *
     * Generated from protobuf field <code>optional string long_name = 1;</code>
     */
    protected $long_name = null;
    /**
     * Short name of the node
     *
     * Generated from protobuf field <code>optional string short_name = 2;</code>
     */
    protected $short_name = null;
    /**
     * The url of the channels from our node
     *
     * Generated from protobuf field <code>optional string channel_url = 3;</code>
     */
    protected $channel_url = null;
    /**
     * The Config of the node
     *
     * Generated from protobuf field <code>optional .meshtastic.LocalConfig config = 4;</code>
     */
    protected $config = null;
    /**
     * The ModuleConfig of the node
     *
     * Generated from protobuf field <code>optional .meshtastic.LocalModuleConfig module_config = 5;</code>
     */
    protected $module_config = null;
    /**
     * Fixed position data
     *
     * Generated from protobuf field <code>optional .meshtastic.Position fixed_position = 6;</code>
     */
    protected $fixed_position = null;
    /**
     * Ringtone for ExternalNotification
     *
     * Generated from protobuf field <code>optional string ringtone = 7;</code>
     */
    protected $ringtone = null;
    /**
     * Predefined messages for CannedMessage
     *
     * Generated from protobuf field <code>optional string canned_messages = 8;</code>
     */
    protected $canned_messages = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $long_name
     *           Long name for the node
     *     @type string $short_name
     *           Short name of the node
     *     @type string $channel_url
     *           The url of the channels from our node
     *     @type \Meshtastic\LocalConfig $config
     *           The Config of the node
     *     @type \Meshtastic\LocalModuleConfig $module_config
     *           The ModuleConfig of the node
     *     @type \Meshtastic\Position $fixed_position
     *           Fixed position data
     *     @type string $ringtone
     *           Ringtone for ExternalNotification
     *     @type string $canned_messages
     *           Predefined messages for CannedMessage
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Clientonly::initOnce();
        parent::__construct($data);
    }

    /**
     * Long name for the node
     *
     * Generated from protobuf field <code>optional string long_name = 1;</code>
     * @return string
     */
    public function getLongName()
    {
        return isset($this->long_name) ? $this->long_name : '';
    }

    public function hasLongName()
    {
        return isset($this->long_name);
    }

    public function clearLongName()
    {
        unset($this->long_name);
    }

    /**
     * Long name for the node
     *
     * Generated from protobuf field <code>optional string long_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setLongName($var)
    {
        GPBUtil::checkString($var, True);
        $this->long_name = $var;

        return $this;
    }

    /**
     * Short name of the node
     *
     * Generated from protobuf field <code>optional string short_name = 2;</code>
     * @return string
     */
    public function getShortName()
    {
        return isset($this->short_name) ? $this->short_name : '';
    }

    public function hasShortName()
    {
        return isset($this->short_name);
    }

    public function clearShortName()
    {
        unset($this->short_name);
    }

    /**
     * Short name of the node
     *
     * Generated from protobuf field <code>optional string short_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setShortName($var)
    {
        GPBUtil::checkString($var, True);
        $this->short_name = $var;

        return $this;
    }

    /**
     * The url of the channels from our node
     *
     * Generated from protobuf field <code>optional string channel_url = 3;</code>
     * @return string
     */
    public function getChannelUrl()
    {
        return isset($this->channel_url) ? $this->channel_url : '';
    }

    public function hasChannelUrl()
    {
        return isset($this->channel_url);
    }

    public function clearChannelUrl()
    {
        unset($this->channel_url);
    }

    /**
     * The url of the channels from our node
     *
     * Generated from protobuf field <code>optional string channel_url = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setChannelUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->channel_url = $var;

        return $this;
    }

    /**
     * The Config of the node
     *
     * Generated from protobuf field <code>optional .meshtastic.LocalConfig config = 4;</code>
     * @return \Meshtastic\LocalConfig|null
     */
    public function getConfig()
    {
        return $this->config;
    }

    public function hasConfig()
    {
        return isset($this->config);
    }

    public function clearConfig()
    {
        unset($this->config);
    }

    /**
     * The Config of the node
     *
     * Generated from protobuf field <code>optional .meshtastic.LocalConfig config = 4;</code>
     * @param \Meshtastic\LocalConfig $var
     * @return $this
     */
    public function setConfig($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\LocalConfig::class);
        $this->config = $var;

        return $this;
    }

    /**
     * The ModuleConfig of the node
     *
     * Generated from protobuf field <code>optional .meshtastic.LocalModuleConfig module_config = 5;</code>
     * @return \Meshtastic\LocalModuleConfig|null
     */
    public function getModuleConfig()
    {
        return $this->module_config;
    }

    public function hasModuleConfig()
    {
        return isset($this->module_config);
    }

    public function clearModuleConfig()
    {
        unset($this->module_config);
    }

    /**
     * The ModuleConfig of the node
     *
     * Generated from protobuf field <code>optional .meshtastic.LocalModuleConfig module_config = 5;</code>
     * @param \Meshtastic\LocalModuleConfig $var
     * @return $this
     */
    public function setModuleConfig($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\LocalModuleConfig::class);
        $this->module_config = $var;

        return $this;
    }

    /**
     * Fixed position data
     *
     * Generated from protobuf field <code>optional .meshtastic.Position fixed_position = 6;</code>
     * @return \Meshtastic\Position|null
     */
    public function getFixedPosition()
    {
        return $this->fixed_position;
    }

    public function hasFixedPosition()
    {
        return isset($this->fixed_position);
    }

    public function clearFixedPosition()
    {
        unset($this->fixed_position);
    }

    /**
     * Fixed position data
     *
     * Generated from protobuf field <code>optional .meshtastic.Position fixed_position = 6;</code>
     * @param \Meshtastic\Position $var
     * @return $this
     */
    public function setFixedPosition($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\Position::class);
        $this->fixed_position = $var;

        return $this;
    }

    /**
     * Ringtone for ExternalNotification
     *
     * Generated from protobuf field <code>optional string ringtone = 7;</code>
     * @return string
     */
    public function getRingtone()
    {
        return isset($this->ringtone) ? $this->ringtone : '';
    }

    public function hasRingtone()
    {
        return isset($this->ringtone);
    }

    public function clearRingtone()
    {
        unset($this->ringtone);
    }

    /**
     * Ringtone for ExternalNotification
     *
     * Generated from protobuf field <code>optional string ringtone = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setRingtone($var)
    {
        GPBUtil::checkString($var, True);
        $this->ringtone = $var;

        return $this;
    }

    /**
     * Predefined messages for CannedMessage
     *
     * Generated from protobuf field <code>optional string canned_messages = 8;</code>
     * @return string
     */
    public function getCannedMessages()
    {
        return isset($this->canned_messages) ? $this->canned_messages : '';
    }

    public function hasCannedMessages()
    {
        return isset($this->canned_messages);
    }

    public function clearCannedMessages()
    {
        unset($this->canned_messages);
    }

    /**
     * Predefined messages for CannedMessage
     *
     * Generated from protobuf field <code>optional string canned_messages = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setCannedMessages($var)
    {
        GPBUtil::checkString($var, True);
        $this->canned_messages = $var;

        return $this;
    }

}

