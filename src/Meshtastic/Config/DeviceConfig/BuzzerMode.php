<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/config.proto

namespace Meshtastic\Config\DeviceConfig;

use UnexpectedValueException;

/**
 * Defines buzzer behavior for audio feedback
 *
 * Protobuf type <code>meshtastic.Config.DeviceConfig.BuzzerMode</code>
 */
class BuzzerMode
{
    /**
     * Default behavior.
     * Buzzer is enabled for all audio feedback including button presses and alerts.
     *
     * Generated from protobuf enum <code>ALL_ENABLED = 0;</code>
     */
    const ALL_ENABLED = 0;
    /**
     * Disabled.
     * All buzzer audio feedback is disabled.
     *
     * Generated from protobuf enum <code>DISABLED = 1;</code>
     */
    const DISABLED = 1;
    /**
     * Notifications Only.
     * Buzzer is enabled only for notifications and alerts, but not for button presses.
     * External notification config determines the specifics of the notification behavior.
     *
     * Generated from protobuf enum <code>NOTIFICATIONS_ONLY = 2;</code>
     */
    const NOTIFICATIONS_ONLY = 2;
    /**
     * Non-notification system buzzer tones only.
     * Buzzer is enabled only for non-notification tones such as button presses, startup, shutdown, but not for alerts.
     *
     * Generated from protobuf enum <code>SYSTEM_ONLY = 3;</code>
     */
    const SYSTEM_ONLY = 3;
    /**
     * Direct Message notifications only.
     * Buzzer is enabled only for direct messages and alerts, but not for button presses.
     * External notification config determines the specifics of the notification behavior.
     *
     * Generated from protobuf enum <code>DIRECT_MSG_ONLY = 4;</code>
     */
    const DIRECT_MSG_ONLY = 4;

    private static $valueToName = [
        self::ALL_ENABLED => 'ALL_ENABLED',
        self::DISABLED => 'DISABLED',
        self::NOTIFICATIONS_ONLY => 'NOTIFICATIONS_ONLY',
        self::SYSTEM_ONLY => 'SYSTEM_ONLY',
        self::DIRECT_MSG_ONLY => 'DIRECT_MSG_ONLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(BuzzerMode::class, \Meshtastic\Config_DeviceConfig_BuzzerMode::class);

