<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/config.proto

namespace Meshtastic\Config\DisplayConfig;

use UnexpectedValueException;

/**
 * Protobuf type <code>meshtastic.Config.DisplayConfig.CompassOrientation</code>
 */
class CompassOrientation
{
    /**
     * The compass and the display are in the same orientation.
     *
     * Generated from protobuf enum <code>DEGREES_0 = 0;</code>
     */
    const DEGREES_0 = 0;
    /**
     * Rotate the compass by 90 degrees.
     *
     * Generated from protobuf enum <code>DEGREES_90 = 1;</code>
     */
    const DEGREES_90 = 1;
    /**
     * Rotate the compass by 180 degrees.
     *
     * Generated from protobuf enum <code>DEGREES_180 = 2;</code>
     */
    const DEGREES_180 = 2;
    /**
     * Rotate the compass by 270 degrees.
     *
     * Generated from protobuf enum <code>DEGREES_270 = 3;</code>
     */
    const DEGREES_270 = 3;
    /**
     * Don't rotate the compass, but invert the result.
     *
     * Generated from protobuf enum <code>DEGREES_0_INVERTED = 4;</code>
     */
    const DEGREES_0_INVERTED = 4;
    /**
     * Rotate the compass by 90 degrees and invert.
     *
     * Generated from protobuf enum <code>DEGREES_90_INVERTED = 5;</code>
     */
    const DEGREES_90_INVERTED = 5;
    /**
     * Rotate the compass by 180 degrees and invert.
     *
     * Generated from protobuf enum <code>DEGREES_180_INVERTED = 6;</code>
     */
    const DEGREES_180_INVERTED = 6;
    /**
     * Rotate the compass by 270 degrees and invert.
     *
     * Generated from protobuf enum <code>DEGREES_270_INVERTED = 7;</code>
     */
    const DEGREES_270_INVERTED = 7;

    private static $valueToName = [
        self::DEGREES_0 => 'DEGREES_0',
        self::DEGREES_90 => 'DEGREES_90',
        self::DEGREES_180 => 'DEGREES_180',
        self::DEGREES_270 => 'DEGREES_270',
        self::DEGREES_0_INVERTED => 'DEGREES_0_INVERTED',
        self::DEGREES_90_INVERTED => 'DEGREES_90_INVERTED',
        self::DEGREES_180_INVERTED => 'DEGREES_180_INVERTED',
        self::DEGREES_270_INVERTED => 'DEGREES_270_INVERTED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CompassOrientation::class, \Meshtastic\Config_DisplayConfig_CompassOrientation::class);

