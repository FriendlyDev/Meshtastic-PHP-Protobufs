<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/device_ui.proto

namespace Meshtastic;

use UnexpectedValueException;

/**
 * Localization
 *
 * Protobuf type <code>meshtastic.Language</code>
 */
class Language
{
    /**
     * English
     *
     * Generated from protobuf enum <code>ENGLISH = 0;</code>
     */
    const ENGLISH = 0;
    /**
     * French
     *
     * Generated from protobuf enum <code>FRENCH = 1;</code>
     */
    const FRENCH = 1;
    /**
     * German
     *
     * Generated from protobuf enum <code>GERMAN = 2;</code>
     */
    const GERMAN = 2;
    /**
     * Italian
     *
     * Generated from protobuf enum <code>ITALIAN = 3;</code>
     */
    const ITALIAN = 3;
    /**
     * Portuguese
     *
     * Generated from protobuf enum <code>PORTUGUESE = 4;</code>
     */
    const PORTUGUESE = 4;
    /**
     * Spanish
     *
     * Generated from protobuf enum <code>SPANISH = 5;</code>
     */
    const SPANISH = 5;
    /**
     * Swedish
     *
     * Generated from protobuf enum <code>SWEDISH = 6;</code>
     */
    const SWEDISH = 6;
    /**
     * Finnish
     *
     * Generated from protobuf enum <code>FINNISH = 7;</code>
     */
    const FINNISH = 7;
    /**
     * Polish
     *
     * Generated from protobuf enum <code>POLISH = 8;</code>
     */
    const POLISH = 8;
    /**
     * Turkish
     *
     * Generated from protobuf enum <code>TURKISH = 9;</code>
     */
    const TURKISH = 9;

    private static $valueToName = [
        self::ENGLISH => 'ENGLISH',
        self::FRENCH => 'FRENCH',
        self::GERMAN => 'GERMAN',
        self::ITALIAN => 'ITALIAN',
        self::PORTUGUESE => 'PORTUGUESE',
        self::SPANISH => 'SPANISH',
        self::SWEDISH => 'SWEDISH',
        self::FINNISH => 'FINNISH',
        self::POLISH => 'POLISH',
        self::TURKISH => 'TURKISH',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

