<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/device_ui.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>meshtastic.NodeFilter</code>
 */
class NodeFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * Filter unknown nodes
     *
     * Generated from protobuf field <code>bool unknown_switch = 1;</code>
     */
    protected $unknown_switch = false;
    /**
     * Filter offline nodes
     *
     * Generated from protobuf field <code>bool offline_switch = 2;</code>
     */
    protected $offline_switch = false;
    /**
     * Filter nodes w/o public key
     *
     * Generated from protobuf field <code>bool public_key_switch = 3;</code>
     */
    protected $public_key_switch = false;
    /**
     * Filter based on hops away
     *
     * Generated from protobuf field <code>int32 hops_away = 4;</code>
     */
    protected $hops_away = 0;
    /**
     * Filter nodes w/o position
     *
     * Generated from protobuf field <code>bool position_switch = 5;</code>
     */
    protected $position_switch = false;
    /**
     * Filter nodes by matching name string
     *
     * Generated from protobuf field <code>string node_name = 6;</code>
     */
    protected $node_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $unknown_switch
     *           Filter unknown nodes
     *     @type bool $offline_switch
     *           Filter offline nodes
     *     @type bool $public_key_switch
     *           Filter nodes w/o public key
     *     @type int $hops_away
     *           Filter based on hops away
     *     @type bool $position_switch
     *           Filter nodes w/o position
     *     @type string $node_name
     *           Filter nodes by matching name string
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\DeviceUi::initOnce();
        parent::__construct($data);
    }

    /**
     * Filter unknown nodes
     *
     * Generated from protobuf field <code>bool unknown_switch = 1;</code>
     * @return bool
     */
    public function getUnknownSwitch()
    {
        return $this->unknown_switch;
    }

    /**
     * Filter unknown nodes
     *
     * Generated from protobuf field <code>bool unknown_switch = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setUnknownSwitch($var)
    {
        GPBUtil::checkBool($var);
        $this->unknown_switch = $var;

        return $this;
    }

    /**
     * Filter offline nodes
     *
     * Generated from protobuf field <code>bool offline_switch = 2;</code>
     * @return bool
     */
    public function getOfflineSwitch()
    {
        return $this->offline_switch;
    }

    /**
     * Filter offline nodes
     *
     * Generated from protobuf field <code>bool offline_switch = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setOfflineSwitch($var)
    {
        GPBUtil::checkBool($var);
        $this->offline_switch = $var;

        return $this;
    }

    /**
     * Filter nodes w/o public key
     *
     * Generated from protobuf field <code>bool public_key_switch = 3;</code>
     * @return bool
     */
    public function getPublicKeySwitch()
    {
        return $this->public_key_switch;
    }

    /**
     * Filter nodes w/o public key
     *
     * Generated from protobuf field <code>bool public_key_switch = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setPublicKeySwitch($var)
    {
        GPBUtil::checkBool($var);
        $this->public_key_switch = $var;

        return $this;
    }

    /**
     * Filter based on hops away
     *
     * Generated from protobuf field <code>int32 hops_away = 4;</code>
     * @return int
     */
    public function getHopsAway()
    {
        return $this->hops_away;
    }

    /**
     * Filter based on hops away
     *
     * Generated from protobuf field <code>int32 hops_away = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setHopsAway($var)
    {
        GPBUtil::checkInt32($var);
        $this->hops_away = $var;

        return $this;
    }

    /**
     * Filter nodes w/o position
     *
     * Generated from protobuf field <code>bool position_switch = 5;</code>
     * @return bool
     */
    public function getPositionSwitch()
    {
        return $this->position_switch;
    }

    /**
     * Filter nodes w/o position
     *
     * Generated from protobuf field <code>bool position_switch = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setPositionSwitch($var)
    {
        GPBUtil::checkBool($var);
        $this->position_switch = $var;

        return $this;
    }

    /**
     * Filter nodes by matching name string
     *
     * Generated from protobuf field <code>string node_name = 6;</code>
     * @return string
     */
    public function getNodeName()
    {
        return $this->node_name;
    }

    /**
     * Filter nodes by matching name string
     *
     * Generated from protobuf field <code>string node_name = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setNodeName($var)
    {
        GPBUtil::checkString($var, True);
        $this->node_name = $var;

        return $this;
    }

}

