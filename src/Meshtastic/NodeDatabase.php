<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/deviceonly.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>meshtastic.NodeDatabase</code>
 */
class NodeDatabase extends \Google\Protobuf\Internal\Message
{
    /**
     * A version integer used to invalidate old save files when we make
     * incompatible changes This integer is set at build time and is private to
     * NodeDB.cpp in the device code.
     *
     * Generated from protobuf field <code>uint32 version = 1;</code>
     */
    protected $version = 0;
    /**
     * New lite version of NodeDB to decrease memory footprint
     *
     * Generated from protobuf field <code>repeated .meshtastic.NodeInfoLite nodes = 2 [(.nanopb) = {</code>
     */
    private $nodes;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $version
     *           A version integer used to invalidate old save files when we make
     *           incompatible changes This integer is set at build time and is private to
     *           NodeDB.cpp in the device code.
     *     @type array<\Meshtastic\NodeInfoLite>|\Google\Protobuf\Internal\RepeatedField $nodes
     *           New lite version of NodeDB to decrease memory footprint
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Deviceonly::initOnce();
        parent::__construct($data);
    }

    /**
     * A version integer used to invalidate old save files when we make
     * incompatible changes This integer is set at build time and is private to
     * NodeDB.cpp in the device code.
     *
     * Generated from protobuf field <code>uint32 version = 1;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * A version integer used to invalidate old save files when we make
     * incompatible changes This integer is set at build time and is private to
     * NodeDB.cpp in the device code.
     *
     * Generated from protobuf field <code>uint32 version = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkUint32($var);
        $this->version = $var;

        return $this;
    }

    /**
     * New lite version of NodeDB to decrease memory footprint
     *
     * Generated from protobuf field <code>repeated .meshtastic.NodeInfoLite nodes = 2 [(.nanopb) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNodes()
    {
        return $this->nodes;
    }

    /**
     * New lite version of NodeDB to decrease memory footprint
     *
     * Generated from protobuf field <code>repeated .meshtastic.NodeInfoLite nodes = 2 [(.nanopb) = {</code>
     * @param array<\Meshtastic\NodeInfoLite>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNodes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Meshtastic\NodeInfoLite::class);
        $this->nodes = $arr;

        return $this;
    }

}

