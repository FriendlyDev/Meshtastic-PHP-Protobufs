<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/module_config.proto

namespace Meshtastic\ModuleConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Settings for reporting unencrypted information about our node to a map via MQTT
 *
 * Generated from protobuf message <code>meshtastic.ModuleConfig.MapReportSettings</code>
 */
class MapReportSettings extends \Google\Protobuf\Internal\Message
{
    /**
     * How often we should report our info to the map (in seconds)
     *
     * Generated from protobuf field <code>uint32 publish_interval_secs = 1;</code>
     */
    protected $publish_interval_secs = 0;
    /**
     * Bits of precision for the location sent (default of 32 is full precision).
     *
     * Generated from protobuf field <code>uint32 position_precision = 2;</code>
     */
    protected $position_precision = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $publish_interval_secs
     *           How often we should report our info to the map (in seconds)
     *     @type int $position_precision
     *           Bits of precision for the location sent (default of 32 is full precision).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\ModuleConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * How often we should report our info to the map (in seconds)
     *
     * Generated from protobuf field <code>uint32 publish_interval_secs = 1;</code>
     * @return int
     */
    public function getPublishIntervalSecs()
    {
        return $this->publish_interval_secs;
    }

    /**
     * How often we should report our info to the map (in seconds)
     *
     * Generated from protobuf field <code>uint32 publish_interval_secs = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setPublishIntervalSecs($var)
    {
        GPBUtil::checkUint32($var);
        $this->publish_interval_secs = $var;

        return $this;
    }

    /**
     * Bits of precision for the location sent (default of 32 is full precision).
     *
     * Generated from protobuf field <code>uint32 position_precision = 2;</code>
     * @return int
     */
    public function getPositionPrecision()
    {
        return $this->position_precision;
    }

    /**
     * Bits of precision for the location sent (default of 32 is full precision).
     *
     * Generated from protobuf field <code>uint32 position_precision = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPositionPrecision($var)
    {
        GPBUtil::checkUint32($var);
        $this->position_precision = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(MapReportSettings::class, \Meshtastic\ModuleConfig_MapReportSettings::class);

