<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/xmodem.proto

namespace Meshtastic\XModem;

use UnexpectedValueException;

/**
 * Protobuf type <code>meshtastic.XModem.Control</code>
 */
class Control
{
    /**
     * Generated from protobuf enum <code>NUL = 0;</code>
     */
    const NUL = 0;
    /**
     * Generated from protobuf enum <code>SOH = 1;</code>
     */
    const SOH = 1;
    /**
     * Generated from protobuf enum <code>STX = 2;</code>
     */
    const STX = 2;
    /**
     * Generated from protobuf enum <code>EOT = 4;</code>
     */
    const EOT = 4;
    /**
     * Generated from protobuf enum <code>ACK = 6;</code>
     */
    const ACK = 6;
    /**
     * Generated from protobuf enum <code>NAK = 21;</code>
     */
    const NAK = 21;
    /**
     * Generated from protobuf enum <code>CAN = 24;</code>
     */
    const CAN = 24;
    /**
     * Generated from protobuf enum <code>CTRLZ = 26;</code>
     */
    const CTRLZ = 26;

    private static $valueToName = [
        self::NUL => 'NUL',
        self::SOH => 'SOH',
        self::STX => 'STX',
        self::EOT => 'EOT',
        self::ACK => 'ACK',
        self::NAK => 'NAK',
        self::CAN => 'CAN',
        self::CTRLZ => 'CTRLZ',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Control::class, \Meshtastic\XModem_Control::class);

