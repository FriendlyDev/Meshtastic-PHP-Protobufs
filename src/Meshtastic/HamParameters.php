<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/admin.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Parameters for setting up Meshtastic for ameteur radio usage
 *
 * Generated from protobuf message <code>meshtastic.HamParameters</code>
 */
class HamParameters extends \Google\Protobuf\Internal\Message
{
    /**
     * Amateur radio call sign, eg. KD2ABC
     *
     * Generated from protobuf field <code>string call_sign = 1;</code>
     */
    protected $call_sign = '';
    /**
     * Transmit power in dBm at the LoRA transceiver, not including any amplification
     *
     * Generated from protobuf field <code>int32 tx_power = 2;</code>
     */
    protected $tx_power = 0;
    /**
     * The selected frequency of LoRA operation
     * Please respect your local laws, regulations, and band plans.
     * Ensure your radio is capable of operating of the selected frequency before setting this.
     *
     * Generated from protobuf field <code>float frequency = 3;</code>
     */
    protected $frequency = 0.0;
    /**
     * Optional short name of user
     *
     * Generated from protobuf field <code>string short_name = 4;</code>
     */
    protected $short_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $call_sign
     *           Amateur radio call sign, eg. KD2ABC
     *     @type int $tx_power
     *           Transmit power in dBm at the LoRA transceiver, not including any amplification
     *     @type float $frequency
     *           The selected frequency of LoRA operation
     *           Please respect your local laws, regulations, and band plans.
     *           Ensure your radio is capable of operating of the selected frequency before setting this.
     *     @type string $short_name
     *           Optional short name of user
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Admin::initOnce();
        parent::__construct($data);
    }

    /**
     * Amateur radio call sign, eg. KD2ABC
     *
     * Generated from protobuf field <code>string call_sign = 1;</code>
     * @return string
     */
    public function getCallSign()
    {
        return $this->call_sign;
    }

    /**
     * Amateur radio call sign, eg. KD2ABC
     *
     * Generated from protobuf field <code>string call_sign = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCallSign($var)
    {
        GPBUtil::checkString($var, True);
        $this->call_sign = $var;

        return $this;
    }

    /**
     * Transmit power in dBm at the LoRA transceiver, not including any amplification
     *
     * Generated from protobuf field <code>int32 tx_power = 2;</code>
     * @return int
     */
    public function getTxPower()
    {
        return $this->tx_power;
    }

    /**
     * Transmit power in dBm at the LoRA transceiver, not including any amplification
     *
     * Generated from protobuf field <code>int32 tx_power = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTxPower($var)
    {
        GPBUtil::checkInt32($var);
        $this->tx_power = $var;

        return $this;
    }

    /**
     * The selected frequency of LoRA operation
     * Please respect your local laws, regulations, and band plans.
     * Ensure your radio is capable of operating of the selected frequency before setting this.
     *
     * Generated from protobuf field <code>float frequency = 3;</code>
     * @return float
     */
    public function getFrequency()
    {
        return $this->frequency;
    }

    /**
     * The selected frequency of LoRA operation
     * Please respect your local laws, regulations, and band plans.
     * Ensure your radio is capable of operating of the selected frequency before setting this.
     *
     * Generated from protobuf field <code>float frequency = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setFrequency($var)
    {
        GPBUtil::checkFloat($var);
        $this->frequency = $var;

        return $this;
    }

    /**
     * Optional short name of user
     *
     * Generated from protobuf field <code>string short_name = 4;</code>
     * @return string
     */
    public function getShortName()
    {
        return $this->short_name;
    }

    /**
     * Optional short name of user
     *
     * Generated from protobuf field <code>string short_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setShortName($var)
    {
        GPBUtil::checkString($var, True);
        $this->short_name = $var;

        return $this;
    }

}

