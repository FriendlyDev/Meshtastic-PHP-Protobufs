<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/telemetry.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Local device mesh statistics
 *
 * Generated from protobuf message <code>meshtastic.LocalStats</code>
 */
class LocalStats extends \Google\Protobuf\Internal\Message
{
    /**
     * How long the device has been running since the last reboot (in seconds)
     *
     * Generated from protobuf field <code>uint32 uptime_seconds = 1;</code>
     */
    protected $uptime_seconds = 0;
    /**
     * Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
     *
     * Generated from protobuf field <code>float channel_utilization = 2;</code>
     */
    protected $channel_utilization = 0.0;
    /**
     * Percent of airtime for transmission used within the last hour.
     *
     * Generated from protobuf field <code>float air_util_tx = 3;</code>
     */
    protected $air_util_tx = 0.0;
    /**
     * Number of packets sent
     *
     * Generated from protobuf field <code>uint32 num_packets_tx = 4;</code>
     */
    protected $num_packets_tx = 0;
    /**
     * Number of packets received (both good and bad)
     *
     * Generated from protobuf field <code>uint32 num_packets_rx = 5;</code>
     */
    protected $num_packets_rx = 0;
    /**
     * Number of packets received that are malformed or violate the protocol
     *
     * Generated from protobuf field <code>uint32 num_packets_rx_bad = 6;</code>
     */
    protected $num_packets_rx_bad = 0;
    /**
     * Number of nodes online (in the past 2 hours)
     *
     * Generated from protobuf field <code>uint32 num_online_nodes = 7;</code>
     */
    protected $num_online_nodes = 0;
    /**
     * Number of nodes total
     *
     * Generated from protobuf field <code>uint32 num_total_nodes = 8;</code>
     */
    protected $num_total_nodes = 0;
    /**
     * Number of received packets that were duplicates (due to multiple nodes relaying).
     * If this number is high, there are nodes in the mesh relaying packets when it's unnecessary, for example due to the ROUTER/REPEATER role.
     *
     * Generated from protobuf field <code>uint32 num_rx_dupe = 9;</code>
     */
    protected $num_rx_dupe = 0;
    /**
     * Number of packets we transmitted that were a relay for others (not originating from ourselves).
     *
     * Generated from protobuf field <code>uint32 num_tx_relay = 10;</code>
     */
    protected $num_tx_relay = 0;
    /**
     * Number of times we canceled a packet to be relayed, because someone else did it before us.
     * This will always be zero for ROUTERs/REPEATERs. If this number is high, some other node(s) is/are relaying faster than you.
     *
     * Generated from protobuf field <code>uint32 num_tx_relay_canceled = 11;</code>
     */
    protected $num_tx_relay_canceled = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $uptime_seconds
     *           How long the device has been running since the last reboot (in seconds)
     *     @type float $channel_utilization
     *           Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
     *     @type float $air_util_tx
     *           Percent of airtime for transmission used within the last hour.
     *     @type int $num_packets_tx
     *           Number of packets sent
     *     @type int $num_packets_rx
     *           Number of packets received (both good and bad)
     *     @type int $num_packets_rx_bad
     *           Number of packets received that are malformed or violate the protocol
     *     @type int $num_online_nodes
     *           Number of nodes online (in the past 2 hours)
     *     @type int $num_total_nodes
     *           Number of nodes total
     *     @type int $num_rx_dupe
     *           Number of received packets that were duplicates (due to multiple nodes relaying).
     *           If this number is high, there are nodes in the mesh relaying packets when it's unnecessary, for example due to the ROUTER/REPEATER role.
     *     @type int $num_tx_relay
     *           Number of packets we transmitted that were a relay for others (not originating from ourselves).
     *     @type int $num_tx_relay_canceled
     *           Number of times we canceled a packet to be relayed, because someone else did it before us.
     *           This will always be zero for ROUTERs/REPEATERs. If this number is high, some other node(s) is/are relaying faster than you.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Telemetry::initOnce();
        parent::__construct($data);
    }

    /**
     * How long the device has been running since the last reboot (in seconds)
     *
     * Generated from protobuf field <code>uint32 uptime_seconds = 1;</code>
     * @return int
     */
    public function getUptimeSeconds()
    {
        return $this->uptime_seconds;
    }

    /**
     * How long the device has been running since the last reboot (in seconds)
     *
     * Generated from protobuf field <code>uint32 uptime_seconds = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setUptimeSeconds($var)
    {
        GPBUtil::checkUint32($var);
        $this->uptime_seconds = $var;

        return $this;
    }

    /**
     * Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
     *
     * Generated from protobuf field <code>float channel_utilization = 2;</code>
     * @return float
     */
    public function getChannelUtilization()
    {
        return $this->channel_utilization;
    }

    /**
     * Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
     *
     * Generated from protobuf field <code>float channel_utilization = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setChannelUtilization($var)
    {
        GPBUtil::checkFloat($var);
        $this->channel_utilization = $var;

        return $this;
    }

    /**
     * Percent of airtime for transmission used within the last hour.
     *
     * Generated from protobuf field <code>float air_util_tx = 3;</code>
     * @return float
     */
    public function getAirUtilTx()
    {
        return $this->air_util_tx;
    }

    /**
     * Percent of airtime for transmission used within the last hour.
     *
     * Generated from protobuf field <code>float air_util_tx = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setAirUtilTx($var)
    {
        GPBUtil::checkFloat($var);
        $this->air_util_tx = $var;

        return $this;
    }

    /**
     * Number of packets sent
     *
     * Generated from protobuf field <code>uint32 num_packets_tx = 4;</code>
     * @return int
     */
    public function getNumPacketsTx()
    {
        return $this->num_packets_tx;
    }

    /**
     * Number of packets sent
     *
     * Generated from protobuf field <code>uint32 num_packets_tx = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setNumPacketsTx($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_packets_tx = $var;

        return $this;
    }

    /**
     * Number of packets received (both good and bad)
     *
     * Generated from protobuf field <code>uint32 num_packets_rx = 5;</code>
     * @return int
     */
    public function getNumPacketsRx()
    {
        return $this->num_packets_rx;
    }

    /**
     * Number of packets received (both good and bad)
     *
     * Generated from protobuf field <code>uint32 num_packets_rx = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setNumPacketsRx($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_packets_rx = $var;

        return $this;
    }

    /**
     * Number of packets received that are malformed or violate the protocol
     *
     * Generated from protobuf field <code>uint32 num_packets_rx_bad = 6;</code>
     * @return int
     */
    public function getNumPacketsRxBad()
    {
        return $this->num_packets_rx_bad;
    }

    /**
     * Number of packets received that are malformed or violate the protocol
     *
     * Generated from protobuf field <code>uint32 num_packets_rx_bad = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setNumPacketsRxBad($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_packets_rx_bad = $var;

        return $this;
    }

    /**
     * Number of nodes online (in the past 2 hours)
     *
     * Generated from protobuf field <code>uint32 num_online_nodes = 7;</code>
     * @return int
     */
    public function getNumOnlineNodes()
    {
        return $this->num_online_nodes;
    }

    /**
     * Number of nodes online (in the past 2 hours)
     *
     * Generated from protobuf field <code>uint32 num_online_nodes = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setNumOnlineNodes($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_online_nodes = $var;

        return $this;
    }

    /**
     * Number of nodes total
     *
     * Generated from protobuf field <code>uint32 num_total_nodes = 8;</code>
     * @return int
     */
    public function getNumTotalNodes()
    {
        return $this->num_total_nodes;
    }

    /**
     * Number of nodes total
     *
     * Generated from protobuf field <code>uint32 num_total_nodes = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setNumTotalNodes($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_total_nodes = $var;

        return $this;
    }

    /**
     * Number of received packets that were duplicates (due to multiple nodes relaying).
     * If this number is high, there are nodes in the mesh relaying packets when it's unnecessary, for example due to the ROUTER/REPEATER role.
     *
     * Generated from protobuf field <code>uint32 num_rx_dupe = 9;</code>
     * @return int
     */
    public function getNumRxDupe()
    {
        return $this->num_rx_dupe;
    }

    /**
     * Number of received packets that were duplicates (due to multiple nodes relaying).
     * If this number is high, there are nodes in the mesh relaying packets when it's unnecessary, for example due to the ROUTER/REPEATER role.
     *
     * Generated from protobuf field <code>uint32 num_rx_dupe = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setNumRxDupe($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_rx_dupe = $var;

        return $this;
    }

    /**
     * Number of packets we transmitted that were a relay for others (not originating from ourselves).
     *
     * Generated from protobuf field <code>uint32 num_tx_relay = 10;</code>
     * @return int
     */
    public function getNumTxRelay()
    {
        return $this->num_tx_relay;
    }

    /**
     * Number of packets we transmitted that were a relay for others (not originating from ourselves).
     *
     * Generated from protobuf field <code>uint32 num_tx_relay = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setNumTxRelay($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_tx_relay = $var;

        return $this;
    }

    /**
     * Number of times we canceled a packet to be relayed, because someone else did it before us.
     * This will always be zero for ROUTERs/REPEATERs. If this number is high, some other node(s) is/are relaying faster than you.
     *
     * Generated from protobuf field <code>uint32 num_tx_relay_canceled = 11;</code>
     * @return int
     */
    public function getNumTxRelayCanceled()
    {
        return $this->num_tx_relay_canceled;
    }

    /**
     * Number of times we canceled a packet to be relayed, because someone else did it before us.
     * This will always be zero for ROUTERs/REPEATERs. If this number is high, some other node(s) is/are relaying faster than you.
     *
     * Generated from protobuf field <code>uint32 num_tx_relay_canceled = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setNumTxRelayCanceled($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_tx_relay_canceled = $var;

        return $this;
    }

}

