<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/telemetry.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Types of Measurements the telemetry module is equipped to handle
 *
 * Generated from protobuf message <code>meshtastic.Telemetry</code>
 */
class Telemetry extends \Google\Protobuf\Internal\Message
{
    /**
     * Seconds since 1970 - or 0 for unknown/unset
     *
     * Generated from protobuf field <code>fixed32 time = 1;</code>
     */
    protected $time = 0;
    protected $variant;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $time
     *           Seconds since 1970 - or 0 for unknown/unset
     *     @type \Meshtastic\DeviceMetrics $device_metrics
     *           Key native device metrics such as battery level
     *     @type \Meshtastic\EnvironmentMetrics $environment_metrics
     *           Weather station or other environmental metrics
     *     @type \Meshtastic\AirQualityMetrics $air_quality_metrics
     *           Air quality metrics
     *     @type \Meshtastic\PowerMetrics $power_metrics
     *           Power Metrics
     *     @type \Meshtastic\LocalStats $local_stats
     *           Local device mesh statistics
     *     @type \Meshtastic\HealthMetrics $health_metrics
     *           Health telemetry metrics
     *     @type \Meshtastic\HostMetrics $host_metrics
     *           Linux host metrics
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Telemetry::initOnce();
        parent::__construct($data);
    }

    /**
     * Seconds since 1970 - or 0 for unknown/unset
     *
     * Generated from protobuf field <code>fixed32 time = 1;</code>
     * @return int
     */
    public function getTime()
    {
        return $this->time;
    }

    /**
     * Seconds since 1970 - or 0 for unknown/unset
     *
     * Generated from protobuf field <code>fixed32 time = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkUint32($var);
        $this->time = $var;

        return $this;
    }

    /**
     * Key native device metrics such as battery level
     *
     * Generated from protobuf field <code>.meshtastic.DeviceMetrics device_metrics = 2;</code>
     * @return \Meshtastic\DeviceMetrics|null
     */
    public function getDeviceMetrics()
    {
        return $this->readOneof(2);
    }

    public function hasDeviceMetrics()
    {
        return $this->hasOneof(2);
    }

    /**
     * Key native device metrics such as battery level
     *
     * Generated from protobuf field <code>.meshtastic.DeviceMetrics device_metrics = 2;</code>
     * @param \Meshtastic\DeviceMetrics $var
     * @return $this
     */
    public function setDeviceMetrics($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\DeviceMetrics::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Weather station or other environmental metrics
     *
     * Generated from protobuf field <code>.meshtastic.EnvironmentMetrics environment_metrics = 3;</code>
     * @return \Meshtastic\EnvironmentMetrics|null
     */
    public function getEnvironmentMetrics()
    {
        return $this->readOneof(3);
    }

    public function hasEnvironmentMetrics()
    {
        return $this->hasOneof(3);
    }

    /**
     * Weather station or other environmental metrics
     *
     * Generated from protobuf field <code>.meshtastic.EnvironmentMetrics environment_metrics = 3;</code>
     * @param \Meshtastic\EnvironmentMetrics $var
     * @return $this
     */
    public function setEnvironmentMetrics($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\EnvironmentMetrics::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Air quality metrics
     *
     * Generated from protobuf field <code>.meshtastic.AirQualityMetrics air_quality_metrics = 4;</code>
     * @return \Meshtastic\AirQualityMetrics|null
     */
    public function getAirQualityMetrics()
    {
        return $this->readOneof(4);
    }

    public function hasAirQualityMetrics()
    {
        return $this->hasOneof(4);
    }

    /**
     * Air quality metrics
     *
     * Generated from protobuf field <code>.meshtastic.AirQualityMetrics air_quality_metrics = 4;</code>
     * @param \Meshtastic\AirQualityMetrics $var
     * @return $this
     */
    public function setAirQualityMetrics($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\AirQualityMetrics::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Power Metrics
     *
     * Generated from protobuf field <code>.meshtastic.PowerMetrics power_metrics = 5;</code>
     * @return \Meshtastic\PowerMetrics|null
     */
    public function getPowerMetrics()
    {
        return $this->readOneof(5);
    }

    public function hasPowerMetrics()
    {
        return $this->hasOneof(5);
    }

    /**
     * Power Metrics
     *
     * Generated from protobuf field <code>.meshtastic.PowerMetrics power_metrics = 5;</code>
     * @param \Meshtastic\PowerMetrics $var
     * @return $this
     */
    public function setPowerMetrics($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\PowerMetrics::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Local device mesh statistics
     *
     * Generated from protobuf field <code>.meshtastic.LocalStats local_stats = 6;</code>
     * @return \Meshtastic\LocalStats|null
     */
    public function getLocalStats()
    {
        return $this->readOneof(6);
    }

    public function hasLocalStats()
    {
        return $this->hasOneof(6);
    }

    /**
     * Local device mesh statistics
     *
     * Generated from protobuf field <code>.meshtastic.LocalStats local_stats = 6;</code>
     * @param \Meshtastic\LocalStats $var
     * @return $this
     */
    public function setLocalStats($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\LocalStats::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Health telemetry metrics
     *
     * Generated from protobuf field <code>.meshtastic.HealthMetrics health_metrics = 7;</code>
     * @return \Meshtastic\HealthMetrics|null
     */
    public function getHealthMetrics()
    {
        return $this->readOneof(7);
    }

    public function hasHealthMetrics()
    {
        return $this->hasOneof(7);
    }

    /**
     * Health telemetry metrics
     *
     * Generated from protobuf field <code>.meshtastic.HealthMetrics health_metrics = 7;</code>
     * @param \Meshtastic\HealthMetrics $var
     * @return $this
     */
    public function setHealthMetrics($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\HealthMetrics::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Linux host metrics
     *
     * Generated from protobuf field <code>.meshtastic.HostMetrics host_metrics = 8;</code>
     * @return \Meshtastic\HostMetrics|null
     */
    public function getHostMetrics()
    {
        return $this->readOneof(8);
    }

    public function hasHostMetrics()
    {
        return $this->hasOneof(8);
    }

    /**
     * Linux host metrics
     *
     * Generated from protobuf field <code>.meshtastic.HostMetrics host_metrics = 8;</code>
     * @param \Meshtastic\HostMetrics $var
     * @return $this
     */
    public function setHostMetrics($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\HostMetrics::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getVariant()
    {
        return $this->whichOneof("variant");
    }

}

