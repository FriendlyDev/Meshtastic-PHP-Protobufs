<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/storeforward.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TODO: REPLACE
 *
 * Generated from protobuf message <code>meshtastic.StoreAndForward</code>
 */
class StoreAndForward extends \Google\Protobuf\Internal\Message
{
    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.RequestResponse rr = 1;</code>
     */
    protected $rr = 0;
    protected $variant;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $rr
     *           TODO: REPLACE
     *     @type \Meshtastic\StoreAndForward\Statistics $stats
     *           TODO: REPLACE
     *     @type \Meshtastic\StoreAndForward\History $history
     *           TODO: REPLACE
     *     @type \Meshtastic\StoreAndForward\Heartbeat $heartbeat
     *           TODO: REPLACE
     *     @type string $text
     *           Text from history message.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Storeforward::initOnce();
        parent::__construct($data);
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.RequestResponse rr = 1;</code>
     * @return int
     */
    public function getRr()
    {
        return $this->rr;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.RequestResponse rr = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setRr($var)
    {
        GPBUtil::checkEnum($var, \Meshtastic\StoreAndForward\RequestResponse::class);
        $this->rr = $var;

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.Statistics stats = 2;</code>
     * @return \Meshtastic\StoreAndForward\Statistics|null
     */
    public function getStats()
    {
        return $this->readOneof(2);
    }

    public function hasStats()
    {
        return $this->hasOneof(2);
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.Statistics stats = 2;</code>
     * @param \Meshtastic\StoreAndForward\Statistics $var
     * @return $this
     */
    public function setStats($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\StoreAndForward\Statistics::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.History history = 3;</code>
     * @return \Meshtastic\StoreAndForward\History|null
     */
    public function getHistory()
    {
        return $this->readOneof(3);
    }

    public function hasHistory()
    {
        return $this->hasOneof(3);
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.History history = 3;</code>
     * @param \Meshtastic\StoreAndForward\History $var
     * @return $this
     */
    public function setHistory($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\StoreAndForward\History::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.Heartbeat heartbeat = 4;</code>
     * @return \Meshtastic\StoreAndForward\Heartbeat|null
     */
    public function getHeartbeat()
    {
        return $this->readOneof(4);
    }

    public function hasHeartbeat()
    {
        return $this->hasOneof(4);
    }

    /**
     * TODO: REPLACE
     *
     * Generated from protobuf field <code>.meshtastic.StoreAndForward.Heartbeat heartbeat = 4;</code>
     * @param \Meshtastic\StoreAndForward\Heartbeat $var
     * @return $this
     */
    public function setHeartbeat($var)
    {
        GPBUtil::checkMessage($var, \Meshtastic\StoreAndForward\Heartbeat::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Text from history message.
     *
     * Generated from protobuf field <code>bytes text = 5;</code>
     * @return string
     */
    public function getText()
    {
        return $this->readOneof(5);
    }

    public function hasText()
    {
        return $this->hasOneof(5);
    }

    /**
     * Text from history message.
     *
     * Generated from protobuf field <code>bytes text = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setText($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getVariant()
    {
        return $this->whichOneof("variant");
    }

}

