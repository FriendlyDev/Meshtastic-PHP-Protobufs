<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/mesh.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A notification message from the device to the client
 * To be used for important messages that should to be displayed to the user
 * in the form of push notifications or validation messages when saving
 * invalid configuration.
 *
 * Generated from protobuf message <code>meshtastic.ClientNotification</code>
 */
class ClientNotification extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of the packet we're notifying in response to
     *
     * Generated from protobuf field <code>optional uint32 reply_id = 1;</code>
     */
    protected $reply_id = null;
    /**
     * Seconds since 1970 - or 0 for unknown/unset
     *
     * Generated from protobuf field <code>fixed32 time = 2;</code>
     */
    protected $time = 0;
    /**
     * The level type of notification
     *
     * Generated from protobuf field <code>.meshtastic.LogRecord.Level level = 3;</code>
     */
    protected $level = 0;
    /**
     * The message body of the notification
     *
     * Generated from protobuf field <code>string message = 4;</code>
     */
    protected $message = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $reply_id
     *           The id of the packet we're notifying in response to
     *     @type int $time
     *           Seconds since 1970 - or 0 for unknown/unset
     *     @type int $level
     *           The level type of notification
     *     @type string $message
     *           The message body of the notification
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Mesh::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of the packet we're notifying in response to
     *
     * Generated from protobuf field <code>optional uint32 reply_id = 1;</code>
     * @return int
     */
    public function getReplyId()
    {
        return isset($this->reply_id) ? $this->reply_id : 0;
    }

    public function hasReplyId()
    {
        return isset($this->reply_id);
    }

    public function clearReplyId()
    {
        unset($this->reply_id);
    }

    /**
     * The id of the packet we're notifying in response to
     *
     * Generated from protobuf field <code>optional uint32 reply_id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setReplyId($var)
    {
        GPBUtil::checkUint32($var);
        $this->reply_id = $var;

        return $this;
    }

    /**
     * Seconds since 1970 - or 0 for unknown/unset
     *
     * Generated from protobuf field <code>fixed32 time = 2;</code>
     * @return int
     */
    public function getTime()
    {
        return $this->time;
    }

    /**
     * Seconds since 1970 - or 0 for unknown/unset
     *
     * Generated from protobuf field <code>fixed32 time = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkUint32($var);
        $this->time = $var;

        return $this;
    }

    /**
     * The level type of notification
     *
     * Generated from protobuf field <code>.meshtastic.LogRecord.Level level = 3;</code>
     * @return int
     */
    public function getLevel()
    {
        return $this->level;
    }

    /**
     * The level type of notification
     *
     * Generated from protobuf field <code>.meshtastic.LogRecord.Level level = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setLevel($var)
    {
        GPBUtil::checkEnum($var, \Meshtastic\LogRecord\Level::class);
        $this->level = $var;

        return $this;
    }

    /**
     * The message body of the notification
     *
     * Generated from protobuf field <code>string message = 4;</code>
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * The message body of the notification
     *
     * Generated from protobuf field <code>string message = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->message = $var;

        return $this;
    }

}

