<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/admin.proto

namespace Meshtastic\AdminMessage;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Input event message to be sent to the node.
 *
 * Generated from protobuf message <code>meshtastic.AdminMessage.InputEvent</code>
 */
class InputEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * The input event code
     *
     * Generated from protobuf field <code>uint32 event_code = 1;</code>
     */
    protected $event_code = 0;
    /**
     * Keyboard character code
     *
     * Generated from protobuf field <code>uint32 kb_char = 2;</code>
     */
    protected $kb_char = 0;
    /**
     * The touch X coordinate
     *
     * Generated from protobuf field <code>uint32 touch_x = 3;</code>
     */
    protected $touch_x = 0;
    /**
     * The touch Y coordinate
     *
     * Generated from protobuf field <code>uint32 touch_y = 4;</code>
     */
    protected $touch_y = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $event_code
     *           The input event code
     *     @type int $kb_char
     *           Keyboard character code
     *     @type int $touch_x
     *           The touch X coordinate
     *     @type int $touch_y
     *           The touch Y coordinate
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Admin::initOnce();
        parent::__construct($data);
    }

    /**
     * The input event code
     *
     * Generated from protobuf field <code>uint32 event_code = 1;</code>
     * @return int
     */
    public function getEventCode()
    {
        return $this->event_code;
    }

    /**
     * The input event code
     *
     * Generated from protobuf field <code>uint32 event_code = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setEventCode($var)
    {
        GPBUtil::checkUint32($var);
        $this->event_code = $var;

        return $this;
    }

    /**
     * Keyboard character code
     *
     * Generated from protobuf field <code>uint32 kb_char = 2;</code>
     * @return int
     */
    public function getKbChar()
    {
        return $this->kb_char;
    }

    /**
     * Keyboard character code
     *
     * Generated from protobuf field <code>uint32 kb_char = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setKbChar($var)
    {
        GPBUtil::checkUint32($var);
        $this->kb_char = $var;

        return $this;
    }

    /**
     * The touch X coordinate
     *
     * Generated from protobuf field <code>uint32 touch_x = 3;</code>
     * @return int
     */
    public function getTouchX()
    {
        return $this->touch_x;
    }

    /**
     * The touch X coordinate
     *
     * Generated from protobuf field <code>uint32 touch_x = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setTouchX($var)
    {
        GPBUtil::checkUint32($var);
        $this->touch_x = $var;

        return $this;
    }

    /**
     * The touch Y coordinate
     *
     * Generated from protobuf field <code>uint32 touch_y = 4;</code>
     * @return int
     */
    public function getTouchY()
    {
        return $this->touch_y;
    }

    /**
     * The touch Y coordinate
     *
     * Generated from protobuf field <code>uint32 touch_y = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setTouchY($var)
    {
        GPBUtil::checkUint32($var);
        $this->touch_y = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InputEvent::class, \Meshtastic\AdminMessage_InputEvent::class);

