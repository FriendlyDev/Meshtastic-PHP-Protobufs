<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/mesh.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>meshtastic.ChunkedPayload</code>
 */
class ChunkedPayload extends \Google\Protobuf\Internal\Message
{
    /**
     * The ID of the entire payload
     *
     * Generated from protobuf field <code>uint32 payload_id = 1;</code>
     */
    protected $payload_id = 0;
    /**
     * The total number of chunks in the payload
     *
     * Generated from protobuf field <code>uint32 chunk_count = 2;</code>
     */
    protected $chunk_count = 0;
    /**
     * The current chunk index in the total
     *
     * Generated from protobuf field <code>uint32 chunk_index = 3;</code>
     */
    protected $chunk_index = 0;
    /**
     * The binary data of the current chunk
     *
     * Generated from protobuf field <code>bytes payload_chunk = 4;</code>
     */
    protected $payload_chunk = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $payload_id
     *           The ID of the entire payload
     *     @type int $chunk_count
     *           The total number of chunks in the payload
     *     @type int $chunk_index
     *           The current chunk index in the total
     *     @type string $payload_chunk
     *           The binary data of the current chunk
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Mesh::initOnce();
        parent::__construct($data);
    }

    /**
     * The ID of the entire payload
     *
     * Generated from protobuf field <code>uint32 payload_id = 1;</code>
     * @return int
     */
    public function getPayloadId()
    {
        return $this->payload_id;
    }

    /**
     * The ID of the entire payload
     *
     * Generated from protobuf field <code>uint32 payload_id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setPayloadId($var)
    {
        GPBUtil::checkUint32($var);
        $this->payload_id = $var;

        return $this;
    }

    /**
     * The total number of chunks in the payload
     *
     * Generated from protobuf field <code>uint32 chunk_count = 2;</code>
     * @return int
     */
    public function getChunkCount()
    {
        return $this->chunk_count;
    }

    /**
     * The total number of chunks in the payload
     *
     * Generated from protobuf field <code>uint32 chunk_count = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setChunkCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->chunk_count = $var;

        return $this;
    }

    /**
     * The current chunk index in the total
     *
     * Generated from protobuf field <code>uint32 chunk_index = 3;</code>
     * @return int
     */
    public function getChunkIndex()
    {
        return $this->chunk_index;
    }

    /**
     * The current chunk index in the total
     *
     * Generated from protobuf field <code>uint32 chunk_index = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setChunkIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->chunk_index = $var;

        return $this;
    }

    /**
     * The binary data of the current chunk
     *
     * Generated from protobuf field <code>bytes payload_chunk = 4;</code>
     * @return string
     */
    public function getPayloadChunk()
    {
        return $this->payload_chunk;
    }

    /**
     * The binary data of the current chunk
     *
     * Generated from protobuf field <code>bytes payload_chunk = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPayloadChunk($var)
    {
        GPBUtil::checkString($var, False);
        $this->payload_chunk = $var;

        return $this;
    }

}

