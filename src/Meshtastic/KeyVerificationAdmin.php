<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/admin.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * This message is used by a client to initiate or complete a key verification
 *
 * Generated from protobuf message <code>meshtastic.KeyVerificationAdmin</code>
 */
class KeyVerificationAdmin extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.meshtastic.KeyVerificationAdmin.MessageType message_type = 1;</code>
     */
    protected $message_type = 0;
    /**
     * The nodenum we're requesting
     *
     * Generated from protobuf field <code>uint32 remote_nodenum = 2;</code>
     */
    protected $remote_nodenum = 0;
    /**
     * The nonce is used to track the connection
     *
     * Generated from protobuf field <code>uint64 nonce = 3;</code>
     */
    protected $nonce = 0;
    /**
     * The 4 digit code generated by the remote node, and communicated outside the mesh
     *
     * Generated from protobuf field <code>optional uint32 security_number = 4;</code>
     */
    protected $security_number = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $message_type
     *     @type int $remote_nodenum
     *           The nodenum we're requesting
     *     @type int|string $nonce
     *           The nonce is used to track the connection
     *     @type int $security_number
     *           The 4 digit code generated by the remote node, and communicated outside the mesh
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Admin::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.meshtastic.KeyVerificationAdmin.MessageType message_type = 1;</code>
     * @return int
     */
    public function getMessageType()
    {
        return $this->message_type;
    }

    /**
     * Generated from protobuf field <code>.meshtastic.KeyVerificationAdmin.MessageType message_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMessageType($var)
    {
        GPBUtil::checkEnum($var, \Meshtastic\KeyVerificationAdmin\MessageType::class);
        $this->message_type = $var;

        return $this;
    }

    /**
     * The nodenum we're requesting
     *
     * Generated from protobuf field <code>uint32 remote_nodenum = 2;</code>
     * @return int
     */
    public function getRemoteNodenum()
    {
        return $this->remote_nodenum;
    }

    /**
     * The nodenum we're requesting
     *
     * Generated from protobuf field <code>uint32 remote_nodenum = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setRemoteNodenum($var)
    {
        GPBUtil::checkUint32($var);
        $this->remote_nodenum = $var;

        return $this;
    }

    /**
     * The nonce is used to track the connection
     *
     * Generated from protobuf field <code>uint64 nonce = 3;</code>
     * @return int|string
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     * The nonce is used to track the connection
     *
     * Generated from protobuf field <code>uint64 nonce = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkUint64($var);
        $this->nonce = $var;

        return $this;
    }

    /**
     * The 4 digit code generated by the remote node, and communicated outside the mesh
     *
     * Generated from protobuf field <code>optional uint32 security_number = 4;</code>
     * @return int
     */
    public function getSecurityNumber()
    {
        return isset($this->security_number) ? $this->security_number : 0;
    }

    public function hasSecurityNumber()
    {
        return isset($this->security_number);
    }

    public function clearSecurityNumber()
    {
        unset($this->security_number);
    }

    /**
     * The 4 digit code generated by the remote node, and communicated outside the mesh
     *
     * Generated from protobuf field <code>optional uint32 security_number = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setSecurityNumber($var)
    {
        GPBUtil::checkUint32($var);
        $this->security_number = $var;

        return $this;
    }

}

