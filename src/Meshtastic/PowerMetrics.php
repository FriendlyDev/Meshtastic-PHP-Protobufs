<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meshtastic/telemetry.proto

namespace Meshtastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Power Metrics (voltage / current / etc)
 *
 * Generated from protobuf message <code>meshtastic.PowerMetrics</code>
 */
class PowerMetrics extends \Google\Protobuf\Internal\Message
{
    /**
     * Voltage (Ch1)
     *
     * Generated from protobuf field <code>optional float ch1_voltage = 1;</code>
     */
    protected $ch1_voltage = null;
    /**
     * Current (Ch1)
     *
     * Generated from protobuf field <code>optional float ch1_current = 2;</code>
     */
    protected $ch1_current = null;
    /**
     * Voltage (Ch2)
     *
     * Generated from protobuf field <code>optional float ch2_voltage = 3;</code>
     */
    protected $ch2_voltage = null;
    /**
     * Current (Ch2)
     *
     * Generated from protobuf field <code>optional float ch2_current = 4;</code>
     */
    protected $ch2_current = null;
    /**
     * Voltage (Ch3)
     *
     * Generated from protobuf field <code>optional float ch3_voltage = 5;</code>
     */
    protected $ch3_voltage = null;
    /**
     * Current (Ch3)
     *
     * Generated from protobuf field <code>optional float ch3_current = 6;</code>
     */
    protected $ch3_current = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $ch1_voltage
     *           Voltage (Ch1)
     *     @type float $ch1_current
     *           Current (Ch1)
     *     @type float $ch2_voltage
     *           Voltage (Ch2)
     *     @type float $ch2_current
     *           Current (Ch2)
     *     @type float $ch3_voltage
     *           Voltage (Ch3)
     *     @type float $ch3_current
     *           Current (Ch3)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meshtastic\Telemetry::initOnce();
        parent::__construct($data);
    }

    /**
     * Voltage (Ch1)
     *
     * Generated from protobuf field <code>optional float ch1_voltage = 1;</code>
     * @return float
     */
    public function getCh1Voltage()
    {
        return isset($this->ch1_voltage) ? $this->ch1_voltage : 0.0;
    }

    public function hasCh1Voltage()
    {
        return isset($this->ch1_voltage);
    }

    public function clearCh1Voltage()
    {
        unset($this->ch1_voltage);
    }

    /**
     * Voltage (Ch1)
     *
     * Generated from protobuf field <code>optional float ch1_voltage = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setCh1Voltage($var)
    {
        GPBUtil::checkFloat($var);
        $this->ch1_voltage = $var;

        return $this;
    }

    /**
     * Current (Ch1)
     *
     * Generated from protobuf field <code>optional float ch1_current = 2;</code>
     * @return float
     */
    public function getCh1Current()
    {
        return isset($this->ch1_current) ? $this->ch1_current : 0.0;
    }

    public function hasCh1Current()
    {
        return isset($this->ch1_current);
    }

    public function clearCh1Current()
    {
        unset($this->ch1_current);
    }

    /**
     * Current (Ch1)
     *
     * Generated from protobuf field <code>optional float ch1_current = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setCh1Current($var)
    {
        GPBUtil::checkFloat($var);
        $this->ch1_current = $var;

        return $this;
    }

    /**
     * Voltage (Ch2)
     *
     * Generated from protobuf field <code>optional float ch2_voltage = 3;</code>
     * @return float
     */
    public function getCh2Voltage()
    {
        return isset($this->ch2_voltage) ? $this->ch2_voltage : 0.0;
    }

    public function hasCh2Voltage()
    {
        return isset($this->ch2_voltage);
    }

    public function clearCh2Voltage()
    {
        unset($this->ch2_voltage);
    }

    /**
     * Voltage (Ch2)
     *
     * Generated from protobuf field <code>optional float ch2_voltage = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setCh2Voltage($var)
    {
        GPBUtil::checkFloat($var);
        $this->ch2_voltage = $var;

        return $this;
    }

    /**
     * Current (Ch2)
     *
     * Generated from protobuf field <code>optional float ch2_current = 4;</code>
     * @return float
     */
    public function getCh2Current()
    {
        return isset($this->ch2_current) ? $this->ch2_current : 0.0;
    }

    public function hasCh2Current()
    {
        return isset($this->ch2_current);
    }

    public function clearCh2Current()
    {
        unset($this->ch2_current);
    }

    /**
     * Current (Ch2)
     *
     * Generated from protobuf field <code>optional float ch2_current = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setCh2Current($var)
    {
        GPBUtil::checkFloat($var);
        $this->ch2_current = $var;

        return $this;
    }

    /**
     * Voltage (Ch3)
     *
     * Generated from protobuf field <code>optional float ch3_voltage = 5;</code>
     * @return float
     */
    public function getCh3Voltage()
    {
        return isset($this->ch3_voltage) ? $this->ch3_voltage : 0.0;
    }

    public function hasCh3Voltage()
    {
        return isset($this->ch3_voltage);
    }

    public function clearCh3Voltage()
    {
        unset($this->ch3_voltage);
    }

    /**
     * Voltage (Ch3)
     *
     * Generated from protobuf field <code>optional float ch3_voltage = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setCh3Voltage($var)
    {
        GPBUtil::checkFloat($var);
        $this->ch3_voltage = $var;

        return $this;
    }

    /**
     * Current (Ch3)
     *
     * Generated from protobuf field <code>optional float ch3_current = 6;</code>
     * @return float
     */
    public function getCh3Current()
    {
        return isset($this->ch3_current) ? $this->ch3_current : 0.0;
    }

    public function hasCh3Current()
    {
        return isset($this->ch3_current);
    }

    public function clearCh3Current()
    {
        unset($this->ch3_current);
    }

    /**
     * Current (Ch3)
     *
     * Generated from protobuf field <code>optional float ch3_current = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setCh3Current($var)
    {
        GPBUtil::checkFloat($var);
        $this->ch3_current = $var;

        return $this;
    }

}

